1、JVM的组成结构
    1）Class Loader 类加载器
    2)Execution Engine 执行引擎负责解释命令，提交操作系统执行
    3）Native Interface 本地接口
    4）Runtime data area 运行数据区
    
 2、 本机接口库 native
    在线程的Thread类方法定义
      private native void start0();
      该方法只有定义没有实现，是因为调用了本地方法库  native为关键字
      
      java native interface JNI  调用本地接口 直接的说就是调用C的方法
         即找操作系统的本地方法库
         
 3、 method Area 方法区
     方法区是被所有线程共享，所有字段和方法字节码，以及一些特殊方法，如构造函数、接口代码也在
     此定义。简单说，所有定义的方法的信息都保存在该区域，此区域属于共享空间。
     
     静态变量+常亮+类信息+运行时常亮池存在方法区中+实例变量存在堆内存中
     
4、栈和堆   栈管运行，堆管内存

   Stack 是什么？
      栈也叫栈内存，主管Java程序的运行，是线程创建的时候创建，它的生命周期是跟随线程的生命周期，
      线程结束栈内存也就释放，对于栈来说不存在垃圾回收问题，只要线程结束该栈就Over，生命周期和线程的生命周期
      是一致的，是线程私有的。基本类型的变量和对象的引用变量都是在函数的栈内存中分配。
      
   栈存储什么？
     栈帧中主要保存3类数据：
        本地变量（Local Variable）：输入参数和输出参数以及方法内的变量
        栈操作（Operand Stack）：记录入栈、出栈操作
        栈帧数据（Fram Data）：包括类文件、方法等等
        
5、 常量池(String pool)
    jdk1.6 String pool  在方法区里面
    jdk1.7 String pool  在堆里面
    jdk1.8 String pool  在元空间